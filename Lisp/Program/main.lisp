(defmacro show (list from number)
    `(let ( (q (gensym)) (it 0) )
        (loop for q in ,list
            do (if (>= it ,number) (print q))
            do (setq it (1+ it))
    ))
)

(defun maxfrom (list)
    (setq maxelem 0)
    (loop for e in list
        do (if (<= maxelem (nth 0 e))
            (setq maxelem (nth 0 e))
        )
    )
    (return-from maxfrom maxelem)
)

(defun quiz_start ()
    (load "quiz.lisp")
    (quiz)
)

(defun add_question ()
    (print "Question add")
    (load "read_database.lisp")
    (setq questions (read_questions))
    (show questions from 0)
    (print "(podaj tresc pytania) > ")
    (setq user_question (read-line))
    (setq user_question (list (1+ (maxfrom questions)) user_question))
    (setq questions (concatenate 'list questions (list user_question)))
    (show questions from 0)
    (save_questions questions)
)

(defun parse_numbers (numbers)
    (with-input-from-string (in numbers)
        (loop for x = (read in nil nil) while x collect x))
)

(defun add_animal ()
    (print "Animal add")
    (load "read_database.lisp")
    (setq animals (read_animals))
    (setq questions (read_questions))
    (show animals from 0)
    (show questions from 0)
    (print "(podaj nazwe zwierzaka) > ")
    (setq animal_name (read-line))
    (print "(podaj numery pytan na tak) > ")
    (setq animal_questions_string (read-line))
    (setq animal_questions_yes (parse_numbers animal_questions_string))
    (print "(podaj numery pytan na nie) > ")
    (setq animal_questions_string (read-line))
    (setq animal_questions_no (parse_numbers animal_questions_string))
    (setq user_animal (list animal_name animal_questions_yes animal_questions_no))
    (setq animals (concatenate 'list animals (list user_animal)))
    (show animals from 0)
    (save_animals animals)
)

(defun main ()
    (print "Witaj w programie ZGANIJ-JAKIE-TO-ZWIERZE")
    (print "[1] Rozpocznij quiz")
    (print "[2] Dodaj pytanie")
    (print "[3] Dodaj zwierze")
    (print ">")

    (setq user_answer (string-downcase (write-to-string (read))))
    (if (equal user_answer "1") (quiz_start))
    (if (equal user_answer "2") (add_question))
    (if (equal user_answer "3") (add_animal))
)

(main)
